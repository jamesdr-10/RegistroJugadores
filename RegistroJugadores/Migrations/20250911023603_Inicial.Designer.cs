// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RegistroJugadores.DAL;

#nullable disable

namespace RegistroJugadores.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20250911023603_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RegistroJugadores.Models.Jugadores", b =>
                {
                    b.Property<int>("JugadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JugadorId"));

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Partidas")
                        .HasColumnType("int");

                    b.HasKey("JugadorId");

                    b.ToTable("Jugadores");
                });

            modelBuilder.Entity("RegistroJugadores.Partidas", b =>
                {
                    b.Property<int>("PartidaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartidaId"));

                    b.Property<string>("EstadoPartida")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GanadorId")
                        .HasColumnType("int");

                    b.Property<int>("Jugador1Id")
                        .HasColumnType("int");

                    b.Property<int?>("Jugador2Id")
                        .HasColumnType("int");

                    b.Property<int>("TurnoJugadorId")
                        .HasColumnType("int");

                    b.HasKey("PartidaId");

                    b.HasIndex("GanadorId");

                    b.HasIndex("Jugador1Id");

                    b.HasIndex("Jugador2Id");

                    b.HasIndex("TurnoJugadorId");

                    b.ToTable("Partidas");
                });

            modelBuilder.Entity("RegistroJugadores.Partidas", b =>
                {
                    b.HasOne("RegistroJugadores.Models.Jugadores", "Ganador")
                        .WithMany()
                        .HasForeignKey("GanadorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RegistroJugadores.Models.Jugadores", "Jugador1")
                        .WithMany()
                        .HasForeignKey("Jugador1Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RegistroJugadores.Models.Jugadores", "Jugador2")
                        .WithMany()
                        .HasForeignKey("Jugador2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RegistroJugadores.Models.Jugadores", "TurnoJugador")
                        .WithMany()
                        .HasForeignKey("TurnoJugadorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ganador");

                    b.Navigation("Jugador1");

                    b.Navigation("Jugador2");

                    b.Navigation("TurnoJugador");
                });
#pragma warning restore 612, 618
        }
    }
}
