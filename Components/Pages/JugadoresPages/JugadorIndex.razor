@page "/Jugador/Index"

@inject JugadoresService jugadoresService
@inject NavigationManager navigationManager

<PageTitle>Registro de Jugadores</PageTitle>
<div class="container">

    <div class="card-shadow-lg">
        <div class="card-header">
            <h5 class="card-title">Registro de Jugadores</h5>
            <a href="/Jugador/Create" class="btn btn-primary"> <span class="bi bi-plus-square-fill-nav-menu mt-3"></span> Crear</a>
        </div>
    </div>

    <div class="card-body">

        <div class="row">

            <div class="col-3">
                <label class="col-form-label"><strong>Filtrar por</strong></label>
            </div>

            <div class="col-4">
                <label class="col-form-label"><strong>Búsqueda</strong></label>
            </div>
        </div>

        <div class="row align-items-center">

            <div class="col-3">
                <InputSelect class="form-select" @bind-Value="Filtro">
                    <option value="" selected disabled>Elija una opción</option>
                    <option value="JugadorId">JugadorId</option>
                    <option value="Nombres">Nombres</option>
                    <option value="Partidas">Partidas</option>
                </InputSelect>
            </div>

            <div class="col-4">
                <div class="input-group">
                    <input class="form-control" @bind="ValorFiltro" placeholder="Buscar" />
                    <button type="button" class="btn btn-primary bi bi-search" @onclick="Buscar"></button>
                </div>
            </div>
            
        </div>

        <table class="table table-hover">
            <thead class="table table-striped text-black">
                <tr>
                    <th>JugadorId</th>
                    <th>Nombres</th>
                    <th>Partidas</th>
                    <th>Editar</th>
                    <th>Eliminar</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var jugador in ListaJugadores)
                {
                    <tr>
                        <td> @jugador.JugadorId</td>
                        <td> @jugador.Nombres</td>
                        <td> @jugador.Partidas</td>


                    </tr>
                }
            </tbody>
        </table>

    </div>

</div>

@code {
    public List<Jugadores> ListaJugadores { get; set; } = new List<Jugadores>();

    public string Filtro { get; set; } = string.Empty;
    public string ValorFiltro { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        ListaJugadores = await jugadoresService.Listar(j => j.JugadorId > 0);
    }

    private async Task Buscar()
    {
        if (ValorFiltro.Trim() != "")
        {
            if (Filtro == "JugadorId")
            {
                ListaJugadores = await jugadoresService.Listar(j => j.JugadorId.Equals(ValorFiltro));
            }
            else if (Filtro == "Nombres")
            {
                ListaJugadores = await jugadoresService.Listar(j => j.Nombres.Contains(ValorFiltro));
            }
            else if (Filtro == "Partidas") 
            {
                ListaJugadores = await jugadoresService.Listar(j => j.Partidas.Equals(ValorFiltro));
            }
        } else
        {
            ListaJugadores = await jugadoresService.Listar(j => j.JugadorId > 0);
        }
    }
}
