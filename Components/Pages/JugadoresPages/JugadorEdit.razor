@page "/Jugador/Edit/{JugadorId:int}"

@inject JugadoresService jugadoresService;
@inject NavigationManager navigationManager;
@rendermode InteractiveServer

<PageTitle>Modificar Jugador</PageTitle>
<EditForm Model="Jugador" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="container">

        <div class="card-header text-center">
            <h5 class="card-title">Modificar Jugador</h5>
        </div>

        <div class="card-body">

        <div class="mb-3">
            <label class="form-label"><strong>JugadorId</strong></label>
            <InputNumber class="form-control" @bind-Value="Jugador.JugadorId" readonly></InputNumber>
        </div>

        <div class="mb-3">
            <label class="form-label"><strong>Nombres</strong></label>
            <InputText class="form-control" @bind-Value="Jugador.Nombres"></InputText>
            <ValidationMessage For="(() => Jugador.Nombres)" />
        </div>

        <div class="mb-3">
            <label class="form-label"><strong>Partidas</strong></label>
            <InputNumber class="form-control" @bind-Value="Jugador.Partidas"></InputNumber>
            <ValidationMessage For="(() => Jugador.Partidas)" />
        </div>

        </div>


    </div>



</EditForm>


@code {

    [Parameter]
    public int JugadorId { get; set; }

    public Jugadores Jugador { get; set; } = new Jugadores();

    public async Task Guardar()
    {
        if (await jugadoresService.Guardar(Jugador))
        {
            navigationManager.NavigateTo("/Jugador/Index");
        } else
        {
            
        }
    }

}
